---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: drainnodegroups.scheduling.koordinator.sh
spec:
  group: scheduling.koordinator.sh
  names:
    kind: DrainNodeGroup
    listKind: DrainNodeGroupList
    plural: drainnodegroups
    singular: drainnodegroup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: The phase of DrainNodeGroup
      jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.ttl
      name: TTL
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DrainNodeGroup is the Schema for the resourcepolicies API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DrainNodeGroupSpec defines the desired state of DrainNodeGroup
            properties:
              drainNodePolicy:
                description: DrainNodePolicy decides how to identify drained nodes
                properties:
                  mode:
                    type: string
                type: object
              executionPolicy:
                description: ExecutionPolicy indicates how to execute in batches
                properties:
                  partition:
                    description: Partition indicates the ordinal at which the DrainNodeGroup
                      should be partitioned by default. Partition indicates how many
                      nodes need to perform draining. Default value is 0.
                    format: int32
                    type: integer
                  paused:
                    description: Paused indicates that the DrainNodeGroup is paused.
                      Default value is false
                    type: boolean
                type: object
              nodeSelector:
                description: NodeSelector decides whether to drain Nodes if the Node
                  matches the selector. Default to the empty LabelSelector, which
                  matches everything.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              terminationPolicy:
                description: TerminationPolicy, when the conditions are met, no new
                  nodes are planned.
                properties:
                  maxNodeCount:
                    description: MaxNodeCount indicates how many nodes are planned
                      at this time
                    format: int32
                    type: integer
                  percentageOfResourceReserved:
                    description: PercentageOfResourceReserved indicates how many resources
                      need to be reserved for this DrainNodeGroup.
                    format: int32
                    maximum: 100
                    minimum: 1
                    type: integer
                type: object
              ttl:
                description: TTL controls the DrainNodeGroup timeout duration.
                type: string
            type: object
          status:
            description: DrainNodeGroupStatus defines the observed state of DrainNodeGroup
            properties:
              availableCount:
                description: AvailableCount indicates the total number of nodes that
                  the DrainNodeGroup can drain. AvailableCount = SucceedCount + FailedCount
                format: int32
                type: integer
              conditions:
                description: Conditions describes the errors, if any.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              failedCount:
                description: FailedCount indicates the total number of nodes that
                  DrainNodeGroup failed to drain
                format: int32
                type: integer
              phase:
                description: Phase indicates what stage the DrainNodeGroup is in,
                  such as Planning, Running, and Succeed.
                type: string
              runningCount:
                description: RunningCount indicates the total number of nodes being
                  drained by the DrainNodeGroup.
                format: int32
                type: integer
              succeedCount:
                description: SucceedCount indicates the total number of nodes that
                  DrainNodeGroup has successfully drained.
                format: int32
                type: integer
              totalCount:
                description: TotalCount indicates the total number of nodes processed
                  by the DrainNodeGroup. TotalCount = UnavailableCount + AvailableCount
                format: int32
                type: integer
              unavailableCount:
                description: UnavailableCount indicates the total number of nodes
                  that the DrainNodeGroup cannot drain.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
